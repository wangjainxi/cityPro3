{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js!/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/work/study/city33/cityPro3/src/router/index.js","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/router/index.js","mtime":1585368381002},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/* Router Modules */\n// import componentsRouter from './modules/components'\n// import chartsRouter from './modules/charts'\n// import tableRouter from './modules/table'\n// import nestedRouter from './modules/nested'\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\nvar constantRoutes = [// {\n//   path: '/redirect',\n//   component: Layout,\n//   hidden: true,\n//   children: [\n//     {\n//       path: '/redirect/:path(.*)',\n//       component: () => import('@/views/redirect/index')\n//     }\n//   ]\n// },\n{\n  path: '/',\n  component: _layout.default,\n  redirect: '/insManagement'\n}, {\n  path: '/insManagement',\n  component: _layout.default,\n  redirect: '/insManagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/InsManagement/index'));\n      });\n    },\n    name: 'insManagement',\n    meta: {\n      title: '机构管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/rolemanagement',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/rolemanagement/index'));\n      });\n    },\n    name: 'rolemanagement',\n    meta: {\n      title: '角色管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/usermanagement',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/usermanagement/index'));\n      });\n    },\n    name: 'usermanagement',\n    meta: {\n      title: '用户管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/peoplemanagement',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/PeopleManagement/index'));\n      });\n    },\n    name: 'peoplemanagement',\n    meta: {\n      title: '人员管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/menumanagement',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/MenuManagement/index'));\n      });\n    },\n    name: 'menumanagement',\n    meta: {\n      title: '菜单管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/workflow',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/WorkFlow/index'));\n      });\n    },\n    name: 'workflow',\n    meta: {\n      title: '工作流定义',\n      icon: 'guide',\n      noCache: true\n    }\n  }, {\n    path: 'design',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/WorkFlow/Design'));\n      });\n    },\n    name: 'Design',\n    meta: {\n      title: 'Design',\n      noCache: true,\n      activeMenu: '工作流定义'\n    },\n    hidden: true\n  }]\n}, {\n  path: '/notice',\n  component: _layout.default,\n  redirect: '/notice/index',\n  meta: {\n    title: '公告',\n    icon: 'guide',\n    noCache: true\n  },\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/Notice/index'));\n      });\n    },\n    name: 'workflow',\n    meta: {\n      title: '公告管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }, {\n    path: 'inform ',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/Notice/Inform'));\n      });\n    },\n    name: 'Design',\n    meta: {\n      title: '公告通知',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/casetype',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/CaseType/index'));\n      });\n    },\n    name: 'casetype',\n    meta: {\n      title: '案件管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/question',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/Question/index'));\n      });\n    },\n    name: 'question',\n    meta: {\n      title: '问题来源管理',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/warningcolor',\n  component: _layout.default,\n  // redirect: '/rolemanagement/index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/WarningColor/index'));\n      });\n    },\n    name: 'WarningColor',\n    meta: {\n      title: '预警颜色',\n      icon: 'guide',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/auth-redirect',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/auth-redirect'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error-page/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error-page/401'));\n    });\n  },\n  hidden: true // {\n  //   path: '/',\n  //   component: Layout,\n  //   redirect: '/dashboard',\n  //   children: [\n  //     {\n  //       path: 'dashboard',\n  //       component: () => import('@/views/dashboard/index'),\n  //       name: 'Dashboard',\n  //       meta: { title: 'Dashboard', icon: 'dashboard', affix: true }\n  //     }\n  //   ]\n  // }\n  // {\n  //   path: '/documentation',\n  //   component: Layout,\n  //   children: [\n  //     {\n  //       path: 'index',\n  //       component: () => import('@/views/documentation/index'),\n  //       name: 'Documentation',\n  //       meta: { title: 'Documentation', icon: 'documentation', affix: true }\n  //     }\n  //   ]\n  // },\n  // {\n  //   path: '/guide',\n  //   component: Layout,\n  //   redirect: '/guide/index',\n  //   children: [\n  //     {\n  //       path: 'index',\n  //       component: () => import('@/views/guide/index'),\n  //       name: 'Guide',\n  //       meta: { title: 'Guide', icon: 'guide', noCache: true }\n  //     }\n  //   ]\n  // },\n  // {\n  //   path: '/profile',\n  //   component: Layout,\n  //   redirect: '/profile/index',\n  //   hidden: true,\n  //   children: [\n  //     {\n  //       path: 'index',\n  //       component: () => import('@/views/profile/index'),\n  //       name: 'Profile',\n  //       meta: { title: 'Profile', icon: 'user', noCache: true }\n  //     }\n  //   ]\n  // }\n\n}];\n/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */\n// export const asyncRoutes = [\n// {\n//   path: '/permission',\n//   component: Layout,\n//   redirect: '/permission/page',\n//   alwaysShow: true, // will always show the root menu\n//   name: 'Permission',\n//   meta: {\n//     title: 'Permission',\n//     icon: 'lock',\n//     roles: ['admin', 'editor'] // you can set roles in root nav\n//   },\n//   children: [\n//     {\n//       path: 'page',\n//       component: () => import('@/views/permission/page'),\n//       name: 'PagePermission',\n//       meta: {\n//         title: 'Page Permission',\n//         roles: ['admin'] // or you can only set roles in sub nav\n//       }\n//     },\n//     {\n//       path: 'directive',\n//       component: () => import('@/views/permission/directive'),\n//       name: 'DirectivePermission',\n//       meta: {\n//         title: 'Directive Permission'\n//         // if do not set roles, means: this page does not require permission\n//       }\n//     },\n//     {\n//       path: 'role',\n//       component: () => import('@/views/permission/role'),\n//       name: 'RolePermission',\n//       meta: {\n//         title: 'Role Permission',\n//         roles: ['admin']\n//       }\n//     }\n//   ]\n// },\n// {\n//   path: '/icon',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/icons/index'),\n//       name: 'Icons',\n//       meta: { title: 'Icons', icon: 'icon', noCache: true }\n//     }\n//   ]\n// },\n\n/** when your routing map is too long, you can split it into small modules **/\n// componentsRouter,\n// chartsRouter,\n// nestedRouter,\n// tableRouter,\n// {\n//   path: '/example',\n//   component: Layout,\n//   redirect: '/example/list',\n//   name: 'Example',\n//   meta: {\n//     title: 'Example',\n//     icon: 'example'\n//   },\n//   children: [\n//     {\n//       path: 'create',\n//       component: () => import('@/views/example/create'),\n//       name: 'CreateArticle',\n//       meta: { title: 'Create Article', icon: 'edit' }\n//     },\n//     {\n//       path: 'edit/:id(\\\\d+)',\n//       component: () => import('@/views/example/edit'),\n//       name: 'EditArticle',\n//       meta: { title: 'Edit Article', noCache: true, activeMenu: '/example/list' },\n//       hidden: true\n//     },\n//     {\n//       path: 'list',\n//       component: () => import('@/views/example/list'),\n//       name: 'ArticleList',\n//       meta: { title: 'Article List', icon: 'list' }\n//     }\n//   ]\n// },\n// {\n//   path: '/tab',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/tab/index'),\n//       name: 'Tab',\n//       meta: { title: 'Tab', icon: 'tab' }\n//     }\n//   ]\n// },\n// {\n//   path: '/error',\n//   component: Layout,\n//   redirect: 'noRedirect',\n//   name: 'ErrorPages',\n//   meta: {\n//     title: 'Error Pages',\n//     icon: '404'\n//   },\n//   children: [\n//     {\n//       path: '401',\n//       component: () => import('@/views/error-page/401'),\n//       name: 'Page401',\n//       meta: { title: '401', noCache: true }\n//     },\n//     {\n//       path: '404',\n//       component: () => import('@/views/error-page/404'),\n//       name: 'Page404',\n//       meta: { title: '404', noCache: true }\n//     }\n//   ]\n// },\n// {\n//   path: '/error-log',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'log',\n//       component: () => import('@/views/error-log/index'),\n//       name: 'ErrorLog',\n//       meta: { title: 'Error Log', icon: 'bug' }\n//     }\n//   ]\n// },\n// {\n//   path: '/excel',\n//   component: Layout,\n//   redirect: '/excel/export-excel',\n//   name: 'Excel',\n//   meta: {\n//     title: 'Excel',\n//     icon: 'excel'\n//   },\n//   children: [\n//     {\n//       path: 'export-excel',\n//       component: () => import('@/views/excel/export-excel'),\n//       name: 'ExportExcel',\n//       meta: { title: 'Export Excel' }\n//     },\n//     {\n//       path: 'export-selected-excel',\n//       component: () => import('@/views/excel/select-excel'),\n//       name: 'SelectExcel',\n//       meta: { title: 'Export Selected' }\n//     },\n//     {\n//       path: 'export-merge-header',\n//       component: () => import('@/views/excel/merge-header'),\n//       name: 'MergeHeader',\n//       meta: { title: 'Merge Header' }\n//     },\n//     {\n//       path: 'upload-excel',\n//       component: () => import('@/views/excel/upload-excel'),\n//       name: 'UploadExcel',\n//       meta: { title: 'Upload Excel' }\n//     }\n//   ]\n// },\n// {\n//   path: '/zip',\n//   component: Layout,\n//   redirect: '/zip/download',\n//   alwaysShow: true,\n//   name: 'Zip',\n//   meta: { title: 'Zip', icon: 'zip' },\n//   children: [\n//     {\n//       path: 'download',\n//       component: () => import('@/views/zip/index'),\n//       name: 'ExportZip',\n//       meta: { title: 'Export Zip' }\n//     }\n//   ]\n// },\n// {\n//   path: '/pdf',\n//   component: Layout,\n//   redirect: '/pdf/index',\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/pdf/index'),\n//       name: 'PDF',\n//       meta: { title: 'PDF', icon: 'pdf' }\n//     }\n//   ]\n// },\n// {\n//   path: '/pdf/download',\n//   component: () => import('@/views/pdf/download'),\n//   hidden: true\n// },\n//   {\n//     path: '/theme',\n//     component: Layout,\n//     children: [\n//       {\n//         path: 'index',\n//         component: () => import('@/views/theme/index'),\n//         name: 'Theme',\n//         meta: { title: 'Theme', icon: 'theme' }\n//       }\n//     ]\n//   },\n//   {\n//     path: '/clipboard',\n//     component: Layout,\n//     children: [\n//       {\n//         path: 'index',\n//         component: () => import('@/views/clipboard/index'),\n//         name: 'ClipboardDemo',\n//         meta: { title: 'Clipboard', icon: 'clipboard' }\n//       }\n//     ]\n//   },\n//   {\n//     path: 'external-link',\n//     component: Layout,\n//     children: [\n//       {\n//         path: 'https://github.com/PanJiaChen/vue-element-admin',\n//         meta: { title: 'External Link', icon: 'link' }\n//       }\n//     ]\n//   },\n//   // 404 page must be placed at the end !!!\n//   { path: '*', redirect: '/404', hidden: true }\n// ]\n\nexports.constantRoutes = constantRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}