{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js!/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/work/study/city33/cityPro3/src/api/product.js","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/api/product.js","mtime":1584804429131},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductList = getProductList;\nexports.createPro = createPro;\nexports.deletePro = deletePro;\nexports.getUnitList = getUnitList;\nexports.getFirmwareList = getFirmwareList;\nexports.uploadFirmware = uploadFirmware;\nexports.downLoadFirmware = downLoadFirmware;\nexports.updateFirmware = updateFirmware;\nexports.getTopicList = getTopicList;\nexports.saveTopicList = saveTopicList;\nexports.fetchIndicatList = fetchIndicatList;\nexports.saveIndicatList = saveIndicatList;\nexports.manyUpdataFirmware = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\nvar _oboe = _interopRequireDefault(require(\"oboe\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _tools = require(\"@/utils/tools\");\n\n/**\n *\n * 产品相关\n */\nfunction getProductList(params) {\n  var paramsStr = (0, _tools.formatParam)(params);\n  return (0, _request.default)({\n    url: \"/api/tenant/types?\".concat(paramsStr),\n    method: 'get'\n  });\n}\n\nfunction createPro(params) {\n  return _request.default.post('/api/types', params);\n}\n\nfunction deletePro(typeId) {\n  return _request.default.delete(\"/api/types/\".concat(typeId));\n}\n\nfunction getUnitList(proId) {\n  return _request.default.get(\"api/units\");\n}\n/**\n *\n * 固件管理\n */\n\n\nfunction getFirmwareList(proId) {\n  return _request.default.get(\"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(proId, \"/attribute/SHARED_SCOPE?key=firmwares\"));\n}\n\nfunction uploadFirmware(typeId, params) {\n  return _request.default.post(\"/api/types/\".concat(typeId, \"/firmware\"), params);\n} // export function downLoadFirmware(blobId) {\n//   return request({\n//     url: `/api/blob/${blobId}/stream`,\n//     method: 'get'\n//   }\n//   );\n// }\n\n\nfunction downLoadFirmware(blobId) {\n  return (0, _axios.default)({\n    url: \"/api/blob/\".concat(blobId, \"/stream\"),\n    headers: {\n      'x-Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n    },\n    method: 'get',\n    responseType: 'blob'\n  });\n}\n\nvar manyUpdataFirmware =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref, callback) {\n    var typeId, blobId, ids, url, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            typeId = _ref.typeId, blobId = _ref.blobId, ids = _ref.ids;\n            url = \"/api/types/\".concat(typeId, \"/firmware/\").concat(blobId, \"/upgrade\");\n            _context.prev = 2;\n            _context.next = 5;\n            return (0, _oboe.default)({\n              url: url,\n              method: 'post',\n              headers: {\n                'x-Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n              },\n              body: ids\n            }).done(function (things) {\n              console.log(' manyUpdataFirmware request log json stream done', things);\n              callback(typeId, blobId, things);\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            (0, _tools.message)('err', _context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function manyUpdataFirmware(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.manyUpdataFirmware = manyUpdataFirmware;\n\nfunction updateFirmware(typeId, params) {\n  return _request.default.post(\"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(typeId, \"/attributes/SHARED_SCOPE\"), params);\n}\n/**\n *  topic 列表  getTopicList, saveTopicList\n */\n\n\nfunction getTopicList(typeId) {\n  return (0, _request.default)({\n    url: \"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(typeId, \"/attribute/SHARED_SCOPE?key=topics\"),\n    method: 'get'\n  });\n}\n\nfunction saveTopicList(typeId, params) {\n  return _request.default.post(\"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(typeId, \"/attributes/SHARED_SCOPE\"), params);\n}\n/**\n *\n * 指标定义\n */\n\n\nfunction fetchIndicatList(typeId) {\n  return (0, _request.default)({\n    url: \"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(typeId, \"/attribute/SHARED_SCOPE?key=thingModel\"),\n    method: 'get'\n  });\n}\n\nfunction saveIndicatList(typeId, params) {\n  return _request.default.post(\"/api/plugins/telemetry/ENTITY_SUB_TYPE/\".concat(typeId, \"/attributes/SHARED_SCOPE\"), params);\n}",null]}