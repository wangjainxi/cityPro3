{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js!/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/work/study/city33/cityPro3/src/api/net.js","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/api/net.js","mtime":1585210662092},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNet = createNet;\nexports.deleteNet = deleteNet;\nexports.getCredentials = getCredentials;\nexports.getAttr = getAttr;\nexports.getChannelProtocol = getChannelProtocol;\nexports.downloadLog = downloadLog;\nexports.getAttachment = getAttachment;\nexports.fetchProcessData = exports.fetchChartData = exports.totalStatus = exports.getEvents = exports.stateEventTrace = exports.logTailf = exports.getTopicData = exports.getProduct = exports.sendCommand = exports.saveNetAttr = exports.getTreeList = exports.getIconGateWayList = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\nvar _oboe = _interopRequireDefault(require(\"oboe\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _tools = require(\"@/utils/tools\");\n\nvar getIconGateWayList =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(params) {\n    var paramsStr, url, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(' api getIconGateWayList  params', params);\n            paramsStr = (0, _tools.formatParam)(params);\n            url = \"api/tenant/devices?\".concat(paramsStr);\n            _context.next = 5;\n            return (0, _request.default)({\n              url: url,\n              method: 'get'\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIconGateWayList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getIconGateWayList = getIconGateWayList;\n\nvar getTreeList =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(netId) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            res = (0, _request.default)({\n              url: \"/api/conf/gateways/\".concat(netId, \"/devices\"),\n              method: 'get'\n            });\n            return _context2.abrupt(\"return\", res);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getTreeList(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // 新建设备\n\n\nexports.getTreeList = getTreeList;\n\nfunction createNet(params) {\n  return _request.default.post(\"/api/devices\", params);\n} // 删除设备\n\n\nfunction deleteNet(deviceId) {\n  return _request.default.delete(\"/api/devices/\".concat(deviceId), {\n    deviceId: deviceId\n  });\n} // 获取设备访问token\n\n\nfunction getCredentials(deviceId) {\n  return (0, _request.default)({\n    url: \"/api/devices/\".concat(deviceId, \"/credentials\"),\n    method: 'get'\n  });\n} // 获取网关属性列表\n\n\nfunction getAttr(params) {\n  return (0, _request.default)({\n    url: \"/api/plugins/telemetry/\".concat(params.entityType, \"/\").concat(params.entityId, \"/attributes/\").concat(params.scope_1, \"?keys=\").concat(params.key),\n    method: 'get'\n  });\n} // 保存网关属性\n\n\nvar saveNetAttr =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(params) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _request.default.post(\"/api/plugins/telemetry/DEVICE/\".concat(params.deviceId, \"/attributes/\").concat(params.scope), params.data);\n\n          case 2:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function saveNetAttr(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // 下发配置\n\n\nexports.saveNetAttr = saveNetAttr;\n\nvar sendCommand =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(params) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _request.default.post(\"/api/devices/\".concat(params.deviceId, \"/action\"), params, {\n              timeout: 15000\n            });\n\n          case 2:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function sendCommand(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.sendCommand = sendCommand;\n\nvar getProduct =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(productId) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            res = (0, _request.default)({\n              // 获取固件列表  》 get url:  /api/conf/products/{productId}/firmwares\n              url: \"/api/conf/products/\".concat(productId, \"/firmwares\"),\n              method: 'get'\n            });\n            return _context5.abrupt(\"return\", res);\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getProduct(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.getProduct = getProduct;\n\nfunction getChannelProtocol(gatewayId) {\n  return (0, _request.default)({\n    url: \"/api/conf/transport/protocols\",\n    method: 'get'\n  });\n}\n\nvar getTopicData =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(gatewayId) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _request.default)({\n              url: \"/api/conf/gateways/\".concat(gatewayId, \"/topics\"),\n              method: 'get'\n            });\n\n          case 2:\n            res = _context6.sent;\n            return _context6.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getTopicData(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.getTopicData = getTopicData;\n\nvar logTailf =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(query, callback) {\n    var url, res;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            url = \"http://cloud.moonstart.cn/api/logs\";\n            _context7.next = 3;\n            return (0, _oboe.default)({\n              url: url,\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: query,\n              withCredentials: true\n            }).done(function (things) {\n              callback(things);\n            });\n\n          case 3:\n            res = _context7.sent;\n            return _context7.abrupt(\"return\", res);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function logTailf(_x7, _x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.logTailf = logTailf;\n\nfunction downloadLog(query) {\n  return (0, _axios.default)({\n    url: \"http://cloud.moonstart.cn/api/logs/txt\",\n    method: 'post',\n    data: query,\n    responseType: 'blob'\n  });\n}\n\nfunction getAttachment(blobId, callback) {}\n\nvar stateEventTrace =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(query, callback) {\n    var url, token, res;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            url = \"/api/devices/state?deviceIds=\".concat(query);\n            token = 'Bearer ' + localStorage.getItem('token');\n            _context8.next = 4;\n            return (0, _oboe.default)({\n              url: url,\n              method: 'get',\n              headers: {\n                'x-Authorization': token\n              }\n            }).done(function (things) {\n              callback(things);\n            });\n\n          case 4:\n            res = _context8.sent;\n            return _context8.abrupt(\"return\", res);\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function stateEventTrace(_x9, _x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nexports.stateEventTrace = stateEventTrace;\n\nvar getEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(params) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return (0, _request.default)({\n              url: \"/api/events/DEVICE/\".concat(params.entityId),\n              method: 'get',\n              params: params\n            });\n\n          case 2:\n            res = _context9.sent;\n            return _context9.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function getEvents(_x11) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n/**\n * 运行监控\n */\n\n\nexports.getEvents = getEvents;\n\nvar totalStatus =\n/*#__PURE__*/\nfunction () {\n  var _ref11 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10(_ref10) {\n    var entityType, entityId, res;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            entityType = _ref10.entityType, entityId = _ref10.entityId;\n            _context10.next = 3;\n            return (0, _request.default)({\n              url: \"/api/telemetry/\".concat(entityType, \"/\").concat(entityId, \"/statistics\"),\n              method: 'get'\n            });\n\n          case 3:\n            res = _context10.sent;\n            return _context10.abrupt(\"return\", res);\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function totalStatus(_x12) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.totalStatus = totalStatus;\n\nvar fetchChartData =\n/*#__PURE__*/\nfunction () {\n  var _ref13 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11(_ref12) {\n    var entityType, entityId, params, paramsStr, res;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            entityType = _ref12.entityType, entityId = _ref12.entityId, params = _ref12.params;\n            paramsStr = (0, _tools.formatParam)(params);\n            _context11.next = 4;\n            return (0, _request.default)({\n              url: \"/api/plugins/telemetry/\".concat(entityType, \"/\").concat(entityId, \"/values/timeseries?\").concat(paramsStr),\n              method: 'get'\n            });\n\n          case 4:\n            res = _context11.sent;\n            return _context11.abrupt(\"return\", res);\n\n          case 6:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function fetchChartData(_x13) {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nexports.fetchChartData = fetchChartData;\n\nvar fetchProcessData =\n/*#__PURE__*/\nfunction () {\n  var _ref15 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12(_ref14) {\n    var entityType, entityId, params, paramsStr, res;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            entityType = _ref14.entityType, entityId = _ref14.entityId, params = _ref14.params;\n            paramsStr = (0, _tools.formatParam)(params);\n            _context12.next = 4;\n            return (0, _request.default)({\n              url: \"/api/plugins/telemetry/\".concat(entityType, \"/\").concat(entityId, \"/values/timeseries?\").concat(paramsStr),\n              method: 'get'\n            });\n\n          case 4:\n            res = _context12.sent;\n            return _context12.abrupt(\"return\", res);\n\n          case 6:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function fetchProcessData(_x14) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nexports.fetchProcessData = fetchProcessData;",null]}