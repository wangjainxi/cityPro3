{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js!/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/work/study/city33/cityPro3/src/store/modules/product.js","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/store/modules/product.js","mtime":1585045023043},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/apple/work/study/city33/cityPro3/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _product = require(\"@/api/product\");\n\nvar _tools = require(\"@/utils/tools\");\n\nvar _lodash = require(\"lodash\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar state = {\n  firmProStore: {},\n  updatingStore: {},\n  updatingStoreClone: {},\n  initfirmStore: {},\n  jumpInit: false,\n  unitList: JSON.parse(window.localStorage.getItem('unitList')),\n  productParam: {\n    productData: [],\n    hasNext: false\n  },\n  deviceType: {\n    typeId: '',\n    blobId: ''\n  }\n};\nvar mutations = {\n  UPDATE_DEVICE_STATUS: function UPDATE_DEVICE_STATUS(state, updateState) {\n    if (state.firmProStore && state.firmProStore[state.deviceType.typeId]) {\n      state.firmProStore[state.deviceType.typeId].map(function (device, idx) {\n        if (device.id.id === updateState.deviceId.id) {\n          if (updateState.additionalInfo) {\n            device.additionalInfo.fwVer = updateState.additionalInfo.fwVer;\n            device.status = 'success';\n          }\n\n          device.additionalInfo.state.connected = updateState.state.connected;\n        }\n\n        return device;\n      });\n    }\n  },\n  SET_FIRM_STORE: function SET_FIRM_STORE(state, _ref) {\n    var typeId = _ref.typeId,\n        blobId = _ref.blobId,\n        netData = _ref.netData;\n    state.deviceType.typeId = typeId;\n    state.deviceType.blobId = blobId;\n\n    if (!state.firmProStore.hasOwnProperty(typeId)) {\n      state.firmProStore[typeId] = netData;\n    } // else {\n    //   if (!state.firmProStore[typeId].hasOwnProperty(blobId)) {\n    //     state.firmProStore[typeId][blobId] = netData;\n    //   }\n    // }\n\n\n    state.initfirmStore = (0, _lodash.cloneDeep)(state.firmProStore);\n  },\n  SET_UPDATE_STORE: function SET_UPDATE_STORE(state, _ref2) {\n    var typeId = _ref2.typeId,\n        blobId = _ref2.blobId,\n        netData = _ref2.netData;\n\n    if (!state.updatingStore.hasOwnProperty(typeId)) {\n      state.updatingStore[typeId] = netData;\n    } else {\n      var _state$updatingStore$;\n\n      (_state$updatingStore$ = state.updatingStore[typeId]).push.apply(_state$updatingStore$, (0, _toConsumableArray2.default)(netData));\n    }\n\n    state.updatingStoreClone = (0, _lodash.cloneDeep)(state.updatingStore);\n  },\n  CHANGE_STATUS_LOADING: function CHANGE_STATUS_LOADING(state, _ref3) {\n    var typeId = _ref3.typeId,\n        blobId = _ref3.blobId,\n        ids = _ref3.ids,\n        status = _ref3.status;\n    ids.forEach(function (id) {\n      state.firmProStore[typeId].map(function (item, index) {\n        if (item.id.id === id) {\n          item.status = 'loading';\n          item.statusMsg = '更新中';\n          state.firmProStore[typeId].splice(index, 1);\n        }\n\n        return item;\n      });\n    });\n  }\n};\nvar actions = {\n  productAction: function productAction(_ref4, params) {\n    var state = _ref4.state;\n    console.log('params', params);\n    (0, _product.getProductList)(params).then(function (res) {\n      state.productParam.hasNext = res.hasNext;\n      state.productParam.productData = res.data;\n    });\n  },\n  getUnitAction: function getUnitAction(_ref5) {\n    var state = _ref5.state;\n    var arr = [];\n    (0, _product.getUnitList)().then(function (res) {\n      res.data.forEach(function (item) {\n        arr.push({\n          label: \"\".concat(item.symbol, \" / \").concat(item.name),\n          value: \"\".concat(item.symbol, \" / \").concat(item.name)\n        });\n      });\n\n      if (arr.length > 0) {\n        state.unitList = arr;\n\n        _vue.default.prototype.$setlocalstorage('unitList', {\n          unitList: arr\n        });\n      }\n    });\n  },\n  // 获取大图标列表数据,包含操作\n  manyUpdataFirmwareAction: function manyUpdataFirmwareAction(_ref6, _ref7) {\n    var dispatch = _ref6.dispatch,\n        commit = _ref6.commit;\n    var typeId = _ref7.typeId,\n        blobId = _ref7.blobId,\n        ids = _ref7.ids;\n    var query = {\n      typeId: typeId,\n      blobId: blobId,\n      ids: ids\n    };\n    (0, _product.manyUpdataFirmware)(query, function (typeId, blobId, things) {\n      state.updatingStore[typeId].map(function (item, index) {\n        if (things.data.deviceId && item.id.id === things.data.deviceId.id) {\n          if (things.success) {\n            item.status = 'successUpdate';\n            item.statusMsg = things.data.result.msg;\n          } else {\n            item.status = 'error';\n            item.statusMsg = things.error;\n          }\n\n          setTimeout(function () {\n            state.updatingStore[typeId].forEach(function (ele, idx) {\n              if (item.id.id === ele.id.id) {\n                state.updatingStore[typeId].splice(idx, 1);\n                state.firmProStore[typeId].unshift(item);\n\n                if (state.updatingStore[typeId].length === 0) {\n                  state.jumpInit = true;\n                }\n              }\n            });\n          }, 3000);\n        }\n\n        return item;\n      });\n    }).then(function (res) {\n      console.log('manyUpdataFirmware res', res);\n    }).catch(function (err) {\n      (0, _tools.message)('error', err);\n      console.log('manyUpdataFirmware err', err);\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}