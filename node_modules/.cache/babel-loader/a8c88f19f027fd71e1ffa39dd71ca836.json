{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js!/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/work/study/city33/cityPro3/src/store/modules/user.js","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/store/modules/user.js","mtime":1578296054808},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/user\");\n\nvar _tools = require(\"@/utils/tools\");\n\nvar state = {\n  token: '',\n  deTokenObj: {},\n  refreshToken: '',\n  deRefreshTokenObj: {},\n  name: '',\n  avatar: ''\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, res) {\n    state.token = res.token;\n    state.refreshToken = res.refreshToken;\n    window.localStorage.clear();\n    window.localStorage.setItem('token', res.token);\n    window.localStorage.setItem('refreshToken', res.refreshToken);\n  },\n  REMOVE_TOKEN: function REMOVE_TOKEN(state) {\n    state.token = '';\n    state.refreshToken = '';\n    window.localStorage.clear();\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        console.log('token2', response);\n        commit('SET_TOKEN', response);\n        resolve();\n      }).catch(function (error) {\n        console.log('login-err');\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var name = data.name,\n            avatar = data.avatar;\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      commit('REMOVE_TOKEN');\n      (0, _tools.directLogin)();\n      resolve(); // logout(state.token).then(() => {\n      //   commit('REMOVE_TOKEN');\n      //   resetRouter();\n      //   resolve();\n      // }).catch(error => {\n      //   reject(error);\n      // });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('REMOVE_TOKEN');\n      resolve();\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}