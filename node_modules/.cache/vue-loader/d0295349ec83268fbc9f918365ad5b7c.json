{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/work/study/city33/cityPro3/src/views/WorkFlow/Design.vue?vue&type=template&id=63329bc4&scoped=true&","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/views/WorkFlow/Design.vue","mtime":1585368381011},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"lane-management\" },\n    [\n      _c(\n        \"table-header\",\n        { on: { addEvent: _vm.addWork, deleteEvent: _vm.deleteWork } },\n        [_vm._v(\"泳道管理\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"search\" },\n        [\n          _vm._v(\"\\n    泳道名称：\\n    \"),\n          _c(\"el-input\", {\n            staticStyle: {},\n            attrs: { placeholder: \"请输入内容\" },\n            model: {\n              value: _vm.input,\n              callback: function($$v) {\n                _vm.input = $$v\n              },\n              expression: \"input\"\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-button\", [_vm._v(\"查询\")])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          ref: \"multipleTable\",\n          staticStyle: { width: \"100%\" },\n          attrs: { data: _vm.tableData, \"tooltip-effect\": \"dark\" }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { label: \"选择\", width: \"55\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"el-checkbox\", {\n                      model: {\n                        value: scope.row.checkbox,\n                        callback: function($$v) {\n                          _vm.$set(scope.row, \"checkbox\", $$v)\n                        },\n                        expression: \"scope.row.checkbox\"\n                      }\n                    })\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"泳道姓名\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [_vm._v(_vm._s(scope.row.name))]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"关联角色\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [_vm._v(_vm._s(scope.row.roll))]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"任务分配\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [_vm._v(_vm._s(scope.row.task))]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"流程定义\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [_vm._v(_vm._s(scope.row.flow))]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"修改\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.updateWork(scope.row, scope.$index)\n                          }\n                        }\n                      },\n                      [_vm._v(\"修改\")]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: _vm.textMap[_vm.dialogStatus],\n            visible: _vm.dialogFormVisible,\n            width: \"30%\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              attrs: {\n                model: _vm.temp,\n                \"label-position\": \"left\",\n                \"label-width\": \"100px\",\n                size: \"mini\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"泳道名称：\", prop: \"name\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.temp.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"name\", $$v)\n                      },\n                      expression: \"temp.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"任务分配\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择任务\" },\n                      model: {\n                        value: _vm.temp.task,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"task\", $$v)\n                        },\n                        expression: \"temp.task\"\n                      }\n                    },\n                    _vm._l(_vm.tasklist, function(item) {\n                      return _c(\"el-option\", {\n                        key: item,\n                        attrs: { label: item, value: item }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"关联角色\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择关联角色\" },\n                      model: {\n                        value: _vm.temp.roll,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"roll\", $$v)\n                        },\n                        expression: \"temp.roll\"\n                      }\n                    },\n                    _vm._l(_vm.rolllist, function(item) {\n                      return _c(\"el-option\", {\n                        key: item,\n                        attrs: { label: item, value: item }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"所属流程\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择所属流程\" },\n                      model: {\n                        value: _vm.temp.flow,\n                        callback: function($$v) {\n                          _vm.$set(_vm.temp, \"flow\", $$v)\n                        },\n                        expression: \"temp.flow\"\n                      }\n                    },\n                    _vm._l(_vm.flowlist, function(item) {\n                      return _c(\"el-option\", {\n                        key: item,\n                        attrs: { label: item, value: item }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.cancel } }, [_vm._v(\"取消\")]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.add } },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}