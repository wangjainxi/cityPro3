{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/work/study/city33/cityPro3/src/views/CaseType/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/views/CaseType/index.vue","mtime":1585368381009},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueContext from 'vue-context'\nimport 'vue-context/src/sass/vue-context.scss'\nexport default {\n  components: { VueContext },\n  data() {\n    return {\n      dialogFormVisible: false,\n      activeName: 'first',\n      caseType: [\n        { id: 1,\n          label: '事件',\n          children: [\n            { id: 40, label: '市容环境', children: [\n              { id: 15, label: '市容环境1-1' },\n              { id: 16, label: '市容环境1-2' },\n              { id: 17, label: '市容环境1-3' }\n            ] },\n            { id: 3, label: '宣传广告', children: [\n              { id: 18, label: '宣传广告1-1' },\n              { id: 19, label: '宣传广告1-2' },\n              { id: 20, label: '宣传广告1-3' }\n            ] },\n            { id: 4, label: '施工管理', children: [\n              { id: 21, label: '施工管理1-1' },\n              { id: 22, label: '施工管理1-2' },\n              { id: 23, label: '施工管理1-3' }\n            ] },\n            { id: 5, label: '突发事件', children: [\n              { id: 24, label: '突发事件-1' },\n              { id: 25, label: '突发事件-2' },\n              { id: 26, label: '突发事件-3' }\n            ] },\n            { id: 6, label: '街面秩序', children: [\n              { id: 14, label: '扩展事件' }\n            ] },\n            { id: 7, label: '热线问题', children: [\n              { id: 33, label: '热线问题-1' },\n              { id: 34, label: '热线问题-2' },\n              { id: 35, label: '热线问题-3' }\n            ] },\n            { id: 8, label: '违法建设类', children: [\n              { id: 36, label: '违法建设' }\n            ] }\n          ]\n        },\n        { id: 2,\n          label: '部件',\n          children: [\n            { id: 9, label: '公共设施', children: [\n              { id: 27, label: '公共设施-1' },\n              { id: 28, label: '公共设施-2' },\n              { id: 29, label: '公共设施-3' }\n            ] },\n            { id: 10, label: '道路交通', children: [\n              { id: 30, label: '道路交通-1' },\n              { id: 31, label: '道路交通-2' },\n              { id: 32, label: '道路交通-3' }\n            ] },\n            { id: 11, label: '市容环境', children: [] },\n            { id: 12, label: '园林绿化', children: [] },\n            { id: 13, label: '房屋土地', children: [] }\n          ]\n        }\n      ],\n      selectDate: {},\n      // 弹框标题\n      dialogStatus: '',\n      textMap: {\n        update: '修改案件类型',\n        create: '新增案件类型',\n        remove: '删除案件类型'\n      },\n      // 表单数据\n      temp: {\n        code: 0,\n        name: ''\n      },\n      rules: {\n        code: [\n          { required: true, message: '请输入案例编码', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请填写案例名称', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n\n    add(data) {\n      // console.log('selectDate.id', data)\n\n      this.dialogFormVisible = true\n      this.dialogStatus = 'create'\n      this.selectDate = data\n    },\n\n    remove(data) {\n      this.selectDate = data\n      this.dialogStatus = 'remove'\n      const fatherindex = 0\n      const rank = 0\n      this.select(this.caseType, fatherindex, rank)\n    },\n    update(data) {\n      this.dialogFormVisible = true\n      this.dialogStatus = 'update'\n      this.selectDate = data\n      this.temp = {\n        code: data.id,\n        name: data.name\n      }\n    },\n    cancel() {\n      this.dialogFormVisible = false\n      this.temp = {\n        code: '',\n        name: ''\n      }\n    },\n    Onsubmit() {\n      // alert(1)\n      // console.log(this.selectDate.children)\n\n      const newDate = {\n        id: this.temp.code,\n        label: this.temp.name,\n        children: []\n      }\n      var rank = 0\n      var fatherindex = 0\n      if (this.dialogStatus === 'create') {\n        // console.log(this.selectDate.id)\n        // console.log(this.selectDate.children)\n\n        if (this.selectDate.children.length > 1) {\n          this.selectDate.children.push(newDate)\n        } else {\n          alert(1)\n          // 没有children代表最底层\n          // console.log(this.caseType[this.zindex])\n          this.select(this.caseType, fatherindex, rank)\n\n          // alert(1)\n          console.log(rank)\n        }\n      } else {\n        this.select(this.caseType, fatherindex, rank)\n        // this.selectDate = newDate\n      }\n    },\n    select(data, fatherindex, rank) {\n      console.log(rank)\n      rank++\n      data.forEach((item, index) => {\n        if (item.id === this.selectDate.id) {\n          console.log('this.selectDate.id', item.id)\n\n          console.log(data, index, fatherindex, rank)\n          alert(1)\n          this.fatherNode = data\n          this.fatherNodeIndex = fatherindex\n          this.NodeIndex = index\n          console.log('rank', rank)\n\n          // 删除\n          if (this.dialogStatus === 'remove') {\n            if (rank === 1) {\n              this.$confirm('此操作将删除该类所有案件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              }).then(() => {\n                this.caseType.splice(index, 1)\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n\n                })\n              }).catch(() => {\n                this.$message({\n                  type: 'info',\n                  message: '已取消删除'\n                })\n              })\n            } else if (rank === 2) {\n              this.$confirm('此操作将删除该类所有案件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              }).then(() => {\n                console.log('二层级', this.caseType[fatherindex])\n\n                this.caseType[fatherindex].children.splice(index, 1)\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n\n                })\n              }).catch(() => {\n                this.$message({\n                  type: 'info',\n                  message: '已取消删除'\n                })\n              })\n            } else if (rank === 3) {\n              this.$confirm('此操作将删除该类所有案件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              }).then(() => {\n                this.caseType.forEach((item, i) => {\n                  console.log(item, i)\n\n                  item.children.forEach((item) => {\n                    if (item.children === data) {\n                      this.zindex = i\n                      console.log('这是最上层index', i)\n                      this.caseType[i].children[fatherindex].children.splice(index, 1)\n                    }\n                  })\n                })\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n\n                })\n              }).catch(() => {\n                this.$message({\n                  type: 'info',\n                  message: '已取消删除'\n                })\n              })\n            }\n          } else {\n            // 增改\n\n            if (rank === 1) {\n              this.$set(this.caseType, this.NodeIndex, { id: this.temp.code, label: this.temp.name, children: this.selectDate.children })\n            } else if (rank === 2) {\n              console.log(typeof (fatherindex))\n\n              // console.log(this.caseType[])\n\n              this.$set(this.caseType[fatherindex].children, index, { id: this.temp.code, label: this.temp.name, children: this.selectDate.children })\n            } else if (rank === 3) {\n            // this.caseType[fatherindex].children[index]\n              console.log('这是data', data)\n              this.caseType.forEach((item, i) => {\n                console.log(item, i)\n\n                item.children.forEach((item) => {\n                  if (item.children === data) {\n                    this.zindex = i\n                    console.log('这是最上层index', i)\n                    if (this.dialogStatus === 'update') {\n                      this.$set(this.caseType[i].children[fatherindex].children, index, { id: this.temp.code, label: this.temp.name, children: this.selectDate.children })\n                      return i\n                    } else {\n                      alert(1)\n                      this.caseType[i].children[fatherindex].children.push({ id: this.temp.code, label: this.temp.name, children: this.selectDate.children })\n                    }\n                  }\n                })\n              })\n\n            // this.$set(this.caseType[zindex])\n            }\n            this.dialogFormVisible = false\n            this.temp = {\n              code: '',\n              name: ''\n            }\n          }\n        } else {\n          // console.log(item)\n          if (item.children && item.children.length > 0) {\n            this.select(item.children, index, rank)\n          }\n        }\n      })\n    }\n  }\n}\n\n",null]}