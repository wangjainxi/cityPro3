{"remainingRequest":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/work/study/city33/cityPro3/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/work/study/city33/cityPro3/src/components/Breadcrumb/index.vue","mtime":1583319674519},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/work/study/city33/cityPro3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pathToRegexp from 'path-to-regexp';\n\nexport default {\n  data () {\n\n    return {\n      levelList: null\n    };\n\n  },\n  watch: {\n    $route () {\n\n      this.getBreadcrumb();\n\n    }\n  },\n  created () {\n\n    this.getBreadcrumb();\n\n  },\n  methods: {\n    getBreadcrumb () {\n\n      // only show routes with meta.title\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title);\n      const first = matched[0];\n\n      if (!this.isDashboard(first)) {\n\n        matched = [{ path: '/dashboard', meta: { title: '首页' }}].concat(matched);\n\n      }\n\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false);\n\n    },\n    isDashboard (route) {\n\n      const name = route && route.name;\n      if (!name) {\n\n        return false;\n\n      }\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase();\n\n    },\n    pathCompile (path) {\n\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n      const { params } = this.$route;\n      var toPath = pathToRegexp.compile(path);\n      return toPath(params);\n\n    },\n    handleLink (item) {\n\n      const { redirect, path } = item;\n      if (redirect) {\n\n        this.$router.push(redirect);\n        return;\n\n      }\n      this.$router.push(this.pathCompile(path));\n\n    }\n  }\n};\n",null]}